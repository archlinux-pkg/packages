name: Build

on:
  push:
    #branches:
    #  - main
    #paths:
    #  - 'packages/**'

  pull_request:
    paths:
      - 'packages/**'

  workflow_dispatch:
    inputs:
      packages:
        description: "A space-separated names of packages selected for rebuilding"
        required: true

jobs:
  build-container:
    runs-on: ubuntu-latest
    container: archlinux
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Install dependencies
        run: pacman -Syu --needed --noconfirm docker base-devel git
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build container
        id: build
        run: |
          # Add non root user to run makepkg with
          useradd makepkg --no-create-home
          chown -R makepkg .
          echo "::group::Generating source archive..."
          # Generate archive with all required sources for the build
          # This either includes local or downloads files using an url
          cd packages/rare
          su -c "makepkg --allsource" makepkg
          echo "::endgroup::"
          CHROMIUM_VERSION="$(compgen -G "*.src.tar.gz" | grep -Po '([\d\.]+-\d*)')"
          REGISTRY="ghcr.io/${{ github.repository_owner }}"
          NAME="ungoogled-chromium-archlinux"
          ID="$(echo $REGISTRY/$NAME | tr '[A-Z]' '[a-z]')"
          REF="$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')"
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && REF=$(echo $REF | sed -e 's/^v//')
          [ "$REF" == "master" ] && REF=latest
          VERSION_TAG="$ID:$CHROMIUM_VERSION"
          LATEST_TAG="$ID:latest"
          echo "CHROMIUM_VERSION=$CHROMIUM_VERSION"
          echo "REGISTRY=$REGISTRY"
          echo "NAME=$NAME"
          echo "ID=$ID"
          echo "REF=$REF"
          echo "VERSION_TAG=$REF_TAG"
          echo "LATEST_TAG=$LATEST_TAG"
          echo "::group::Building container image..."
          # Build container from source files
          docker build . \
            --file .github/workflows/container/Dockerfile \
            --tag "$VERSION_TAG" \
            --tag "$LATEST_TAG"
          # Reduce worker space used
          rm -rf *
          echo "::endgroup::"
          echo "::set-output name=chromium-version::$CHROMIUM_VERSION"
          echo "::set-output name=version-tag::$VERSION_TAG"
          echo "::set-output name=latest-tag::$LATEST_TAG"
      - name: Push image
        run: |
          docker push "${{ steps.build.outputs.version-tag }}"
          docker push "${{ steps.build.outputs.latest-tag }}"
    outputs:
      name: "${{ steps.build.outputs.chromium-version }}"
      image-tag: "${{ steps.build.outputs.version-tag }}"

  build-1:
    runs-on: ubuntu-latest
    needs: build-container
    steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: Setup Stage
          run: npm run setup --prefix ./.github/actions/stage
        - name: Run Stage
          id: stage
          uses: ./.github/actions/stage
          with:
            name: "${{ join(needs.*.outputs.name) }}"
            use-registry: true
            registry-token: "${{ secrets.GITHUB_TOKEN }}"
            image-tag: "${{ join(needs.*.outputs.image-tag) }}"
    outputs:
      finished: "${{ steps.stage.outputs.finished }}"
      name: "${{ steps.stage.outputs.name }}"
      image-tag: "latest"

  build-2:
    runs-on: ubuntu-latest
    needs: build-1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Stage
        run: npm run setup --prefix ./.github/actions/stage
      - name: Run Stage
        id: stage
        uses: ./.github/actions/stage
        with:
          finished: "${{ join(needs.*.outputs.finished) }}"
          progress-name: build-1
          name: "${{ join(needs.*.outputs.name) }}"
          use-registry: true
          registry-token: "${{ secrets.GITHUB_TOKEN }}"
          image-tag: "${{ join(needs.*.outputs.image-tag) }}"
    outputs:
      finished: "${{ steps.stage.outputs.finished }}"
      name: "${{ steps.stage.outputs.name }}"
      image-tag: "latest"

  build-3:
    runs-on: ubuntu-latest
    needs: build-2
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Stage
        run: npm run setup --prefix ./.github/actions/stage
      - name: Run Stage
        id: stage
        uses: ./.github/actions/stage
        with:
          finished: "${{ join(needs.*.outputs.finished) }}"
          progress-name: build-2
          name: "${{ join(needs.*.outputs.name) }}"
          use-registry: true
          registry-token: "${{ secrets.GITHUB_TOKEN }}"
          image-tag: "${{ join(needs.*.outputs.image-tag) }}"
    outputs:
      finished: "${{ steps.stage.outputs.finished }}"
      name: "${{ steps.stage.outputs.name }}"
      image-tag: "latest"

  build-4:
    runs-on: ubuntu-latest
    needs: build-3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Stage
        run: npm run setup --prefix ./.github/actions/stage
      - name: Run Stage
        id: stage
        uses: ./.github/actions/stage
        with:
          finished: "${{ join(needs.*.outputs.finished) }}"
          progress-name: build-3
          name: "${{ join(needs.*.outputs.name) }}"
          use-registry: true
          registry-token: "${{ secrets.GITHUB_TOKEN }}"
          image-tag: "${{ join(needs.*.outputs.image-tag) }}"
    outputs:
      finished: "${{ steps.stage.outputs.finished }}"
      name: "${{ steps.stage.outputs.name }}"
      image-tag: "latest"

  build-5:
    runs-on: ubuntu-latest
    needs: build-4
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Stage
        run: npm run setup --prefix ./.github/actions/stage
      - name: Run Stage
        id: stage
        uses: ./.github/actions/stage
        with:
          finished: "${{ join(needs.*.outputs.finished) }}"
          progress-name: build-4
          name: "${{ join(needs.*.outputs.name) }}"
          use-registry: true
          registry-token: "${{ secrets.GITHUB_TOKEN }}"
          image-tag: "${{ join(needs.*.outputs.image-tag) }}"
    outputs:
      finished: "${{ steps.stage.outputs.finished }}"
      name: "${{ steps.stage.outputs.name }}"
      image-tag: "latest"

  build-6:
    runs-on: ubuntu-latest
    needs: build-5
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Stage
        run: npm run setup --prefix ./.github/actions/stage
      - name: Run Stage
        id: stage
        uses: ./.github/actions/stage
        with:
          finished: "${{ join(needs.*.outputs.finished) }}"
          progress-name: build-5
          name: "${{ join(needs.*.outputs.name) }}"
          use-registry: true
          registry-token: "${{ secrets.GITHUB_TOKEN }}"
          image-tag: "${{ join(needs.*.outputs.image-tag) }}"
    outputs:
      finished: "${{ steps.stage.outputs.finished }}"
      name: "${{ steps.stage.outputs.name }}"
      image-tag: "latest"
