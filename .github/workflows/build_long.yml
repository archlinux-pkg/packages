name: Long Build

on:
  push:
    # branches:
    #   - main
    # paths:
    #   - 'long-build/**'

  workflow_dispatch:
    inputs:
      packages:
        description: "Package to rebuild"
        required: true

jobs:
  build-container:
    runs-on: ubuntu-latest
    container: ghcr.io/archlinux-pkg/packages:latest
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install dependencies
        run: pacman -Syu --needed --noconfirm docker

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container
        id: build
        run: ./.github/scripts/build/long/build-container.sh
        env:
          REGISTRY: ghcr.io/${{ github.repository_owner }}
          GH_REF: ${{ github.ref }}

      - name: Push image
        run: docker push "${{ steps.build.outputs.version-tag }}"

    outputs:
      chromium-version: "${{ steps.build.outputs.chromium-version }}"
      image-tag: "${{ steps.build.outputs.version-tag }}"

  build-1:
    runs-on: ubuntu-latest
    needs: build-container

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Stage
        run: npm run setup --prefix ./.github/actions/stage
      - name: Run Stage
        id: stage
        uses: ./.github/actions/stage
        with:
          package: "${{ join(needs.*.outputs.chromium-version) }}"
          use-registry: true
          registry-token: "${{ secrets.GITHUB_TOKEN }}"
          image-tag: "${{ join(needs.*.outputs.image-tag) }}"

    outputs:
      finished: "${{ steps.stage.outputs.finished }}"
      package: "${{ steps.stage.outputs.package }}"
      image-tag: "${{ steps.stage.outputs.image-tag }}"

  build-2:
    runs-on: ubuntu-latest
    needs: build-1

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Stage
        run: npm run setup --prefix ./.github/actions/stage
      - name: Run Stage
        id: stage
        uses: ./.github/actions/stage
        with:
          finished: "${{ join(needs.*.outputs.finished) }}"
          progress-name: build-1
          package: "${{ join(needs.*.outputs.chromium-version) }}"
          use-registry: true
          registry-token: "${{ secrets.GITHUB_TOKEN }}"
          image-tag: "${{ join(needs.*.outputs.image-tag) }}"

    outputs:
      finished: "${{ steps.stage.outputs.finished }}"
      package: "${{ steps.stage.outputs.package }}"
      image-tag: "${{ steps.stage.outputs.image-tag }}"

  build-3:
    runs-on: ubuntu-latest
    needs: build-2

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Stage
        run: npm run setup --prefix ./.github/actions/stage
      - name: Run Stage
        id: stage
        uses: ./.github/actions/stage
        with:
          finished: "${{ join(needs.*.outputs.finished) }}"
          progress-name: build-2
          package: "${{ join(needs.*.outputs.chromium-version) }}"
          use-registry: true
          registry-token: "${{ secrets.GITHUB_TOKEN }}"
          image-tag: "${{ join(needs.*.outputs.image-tag) }}"

    outputs:
      finished: "${{ steps.stage.outputs.finished }}"
      package: "${{ steps.stage.outputs.package }}"
      image-tag: "${{ steps.stage.outputs.image-tag }}"

  build-4:
    runs-on: ubuntu-latest
    needs: build-3

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Stage
        run: npm run setup --prefix ./.github/actions/stage
      - name: Run Stage
        id: stage
        uses: ./.github/actions/stage
        with:
          finished: "${{ join(needs.*.outputs.finished) }}"
          progress-name: build-3
          package: "${{ join(needs.*.outputs.chromium-version) }}"
          use-registry: true
          registry-token: "${{ secrets.GITHUB_TOKEN }}"
          image-tag: "${{ join(needs.*.outputs.image-tag) }}"

    outputs:
      finished: "${{ steps.stage.outputs.finished }}"
      package: "${{ steps.stage.outputs.package }}"
      image-tag: "${{ steps.stage.outputs.image-tag }}"

  build-5:
    runs-on: ubuntu-latest
    needs: build-4

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Stage
        run: npm run setup --prefix ./.github/actions/stage
      - name: Run Stage
        id: stage
        uses: ./.github/actions/stage
        with:
          finished: "${{ join(needs.*.outputs.finished) }}"
          progress-name: build-4
          package: "${{ join(needs.*.outputs.chromium-version) }}"
          use-registry: true
          registry-token: "${{ secrets.GITHUB_TOKEN }}"
          image-tag: "${{ join(needs.*.outputs.image-tag) }}"

    outputs:
      finished: "${{ steps.stage.outputs.finished }}"
      package: "${{ steps.stage.outputs.package }}"
      image-tag: "${{ steps.stage.outputs.image-tag }}"

  build-6:
    runs-on: ubuntu-latest
    needs: build-5

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Stage
        run: npm run setup --prefix ./.github/actions/stage
      - name: Run Stage
        id: stage
        uses: ./.github/actions/stage
        with:
          finished: "${{ join(needs.*.outputs.finished) }}"
          progress-name: build-5
          package: "${{ join(needs.*.outputs.chromium-version) }}"
          use-registry: true
          registry-token: "${{ secrets.GITHUB_TOKEN }}"
          image-tag: "${{ join(needs.*.outputs.image-tag) }}"

    outputs:
      finished: "${{ steps.stage.outputs.finished }}"
      package: "${{ steps.stage.outputs.package }}"
      image-tag: "${{ steps.stage.outputs.image-tag }}"

  upload:
    runs-on: ubuntu-latest
    needs: build-6
    if: github.event_name != 'pull_request'

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ join(needs.*.outputs.package) }}

      - name: Update file names
        run: |
          mkdir pkgs
          mv *.pkg.tar* pkgs/

          cd pkgs

          for file in *.pkg.tar*
          do
            new_filename="${file//:/_}"

            if [ "$file" != "$new_filename" ]
            then
              mv "$file" "$new_filename"
            fi
          done

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_SECRET }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Sign packages
        run: gpg --detach-sign --use-agent --default-key 7A6646A6C14690C0 --batch --yes "$file"

      - name: Upload package
        run: su -c './.github/scripts/upload.sh' build
        env:
          FTP_URI: ${{ secrets.FTP_URI }}
          FTP_USER: ${{ secrets.FTP_USER }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
          FTP_CWD: ${{ secrets.FTP_CWD }}
