name: Long Build

on:
  push:
    # branches:
    #   - main
    # paths:
    #   - 'test/**'

  pull_request:
    paths:
      - 'test/**'

  workflow_dispatch:
    inputs:
      packages:
        description: "Package to rebuild"
        required: true

jobs:
  build-container:
    runs-on: ubuntu-latest
    container: ghcr.io/archlinux-pkg/packages:latest
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install dependencies
        run: pacman -Syu --needed --noconfirm docker

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build container
        id: build
        run: |
          echo "::group::Generating source archive..."
          sudo chown build -R .
          cd long-build/ungoogled-chromium
          # Generate archive with all required sources for the build
          # This either includes local or downloads files using an url
          su -c "makepkg --allsource" build
          mv *.src.tar.gz ../..
          cd ../..
          echo "::endgroup::"
          CHROMIUM_VERSION="$(compgen -G "*.src.tar.gz" | grep -Po '([\d\.]+-\d*)')"
          REGISTRY="ghcr.io/${{ github.repository_owner }}"
          NAME="packages"
          ID="$(echo $REGISTRY/$NAME | tr '[A-Z]' '[a-z]')"
          REF="$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')"
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && REF=$(echo $REF | sed -e 's/^v//')
          [ "$REF" == "master" ] && REF=latest
          VERSION_TAG="$ID:ungoogled-chromium-$CHROMIUM_VERSION"
          LATEST_TAG="$ID:latest"
          echo "CHROMIUM_VERSION=$CHROMIUM_VERSION"
          echo "REGISTRY=$REGISTRY"
          echo "NAME=$NAME"
          echo "ID=$ID"
          echo "REF=$REF"
          echo "VERSION_TAG=$REF_TAG"
          echo "LATEST_TAG=$LATEST_TAG"
          echo "::group::Building container image..."
          # Build container from source files
          docker build . \
            --file .github/scripts/build/long/Dockerfile \
            --build-arg PACKAGE=ungoogled-chromium \
            --tag "$VERSION_TAG" \
          # Reduce worker space used
          rm -rf *
          echo "::endgroup::"
          echo "::set-output name=chromium-version::$CHROMIUM_VERSION"
          echo "::set-output name=version-tag::$VERSION_TAG"

      - name: Push image
        run: |
          docker push "${{ steps.build.outputs.version-tag }}"

    outputs:
      chromium-version: "${{ steps.build.outputs.chromium-version }}"
      image-tag: "${{ steps.build.outputs.version-tag }}"

  build-1:
    runs-on: ubuntu-latest
    needs: build-container
    container: ${{ join(needs.*.outputs.image-tag) }}

    steps:
      - name: Run Stage
        id: stage
        env:
          STAGE: 1
          BUILD_TIMEOUT: 310m
        run: bash /home/build/build.sh

      - name: Upload Artifact
        if: ${{ steps.stage.outputs.FINISHED }} != "yes"
        uses: actions/upload-artifact@v2
        with:
          name: stage-1
          path: stage.tar.zst

    outputs:
      finished: "${{ steps.stage.outputs.FINISHED }}"
      image-tag: "${{ join(needs.*.outputs.image-tag) }}"

  build-2:
    runs-on: ubuntu-latest
    needs: build-1
    container: ${{ join(needs.*.outputs.image-tag) }}

    steps:
      - name: Download Artifact
        if: ${{ join(needs.*.outputs.finished) }} != "yes"
        uses: actions/download-artifact@v2
        with:
          name: stage-1

      - name: Run Stage
        id: stage
        run: bash /home/build/build.sh
        env:
          STAGE: 2
          STAGE_ARCHIVE: stage.tar.zst
          BUILD_TIMEOUT: 310m

      - name: Upload Artifact
        if: ${{ steps.stage.outputs.FINISHED }} != "yes"
        uses: actions/upload-artifact@v2
        with:
          name: stage-2
          path: stage.tar.zst

    outputs:
      finished: "${{ steps.stage.outputs.FINISHED }}"
      image-tag: "${{ join(needs.*.outputs.image-tag) }}"

  build-3:
    runs-on: ubuntu-latest
    needs: build-2
    container: ${{ join(needs.*.outputs.image-tag) }}

    steps:
      - name: Download Artifact
        if: ${{ join(needs.*.outputs.finished) }} != "yes"
        uses: actions/download-artifact@v2
        with:
          name: stage-2

      - name: Run Stage
        id: stage
        run: bash /home/build/build.sh
        env:
          STAGE: 3
          STAGE_ARCHIVE: stage.tar.zst
          BUILD_TIMEOUT: 310m

      - name: Upload Artifact
        if: ${{ steps.stage.outputs.FINISHED }} != "yes"
        uses: actions/upload-artifact@v2
        with:
          name: stage-3
          path: stage.tar.zst

    outputs:
      finished: "${{ steps.stage.outputs.FINISHED }}"
      image-tag: "${{ join(needs.*.outputs.image-tag) }}"

  build-4:
    runs-on: ubuntu-latest
    needs: build-3
    container: ${{ join(needs.*.outputs.image-tag) }}

    steps:
      - name: Download Artifact
        if: ${{ join(needs.*.outputs.finished) }} != "yes"
        uses: actions/download-artifact@v2
        with:
          name: stage-3

      - name: Run Stage
        id: stage
        run: bash /home/build/build.sh
        env:
          STAGE: 4
          STAGE_ARCHIVE: stage.tar.zst
          BUILD_TIMEOUT: 310m

      - name: Upload Artifact
        if: ${{ steps.stage.outputs.FINISHED }} != "yes"
        uses: actions/upload-artifact@v2
        with:
          name: stage-4
          path: stage.tar.zst

    outputs:
      finished: "${{ steps.stage.outputs.FINISHED }}"
      image-tag: "${{ join(needs.*.outputs.image-tag) }}"

  build-5:
    runs-on: ubuntu-latest
    needs: build-4
    container: ${{ join(needs.*.outputs.image-tag) }}

    steps:
      - name: Download Artifact
        if: ${{ join(needs.*.outputs.finished) }} != "yes"
        uses: actions/download-artifact@v2
        with:
          name: stage-4

      - name: Run Stage
        id: stage
        run: bash /home/build/build.sh
        env:
          STAGE: 5
          STAGE_ARCHIVE: stage.tar.zst
          BUILD_TIMEOUT: 310m

      - name: Upload Artifact
        if: ${{ steps.stage.outputs.FINISHED }} != "yes"
        uses: actions/upload-artifact@v2
        with:
          name: stage-5
          path: stage.tar.zst

    outputs:
      finished: "${{ steps.stage.outputs.FINISHED }}"
      image-tag: "${{ join(needs.*.outputs.image-tag) }}"

  build-6:
    runs-on: ubuntu-latest
    needs: build-5
    container: ${{ join(needs.*.outputs.image-tag) }}

    steps:
      - name: Download Artifact
        if: ${{ join(needs.*.outputs.finished) }} != "yes"
        uses: actions/download-artifact@v2
        with:
          name: stage-5

      - name: Run Stage
        id: stage
        run: bash /home/build/build.sh
        env:
          STAGE: 6
          STAGE_ARCHIVE: stage.tar.zst
          BUILD_TIMEOUT: 310m

      - name: Upload Artifact
        if: ${{ steps.stage.outputs.FINISHED }} != "yes"
        uses: actions/upload-artifact@v2
        with:
          name: stage-6
          path: stage.tar.zst

    outputs:
      finished: "${{ steps.stage.outputs.FINISHED }}"
      image-tag: "${{ join(needs.*.outputs.image-tag) }}"
