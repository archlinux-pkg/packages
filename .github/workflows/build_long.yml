name: Long Build

on:
  push:
    # branches:
    #   - main
    # paths:
    #   - 'test/**'

  pull_request:
    paths:
      - 'test/**'

  workflow_dispatch:
    inputs:
      packages:
        description: "Package to rebuild"
        required: true

jobs:
  build-container:
    runs-on: ubuntu-latest
    container: ghcr.io/archlinux-pkg/packages:latest
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Install dependencies
        run: pacman -Syu --needed --noconfirm docker
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build container
        id: build
        run: |
          echo "::group::Generating source archive..."
          sudo chown build -R .
          cd long-build/ungoogled-chromium
          # Generate archive with all required sources for the build
          # This either includes local or downloads files using an url
          su -c "makepkg --allsource" build
          mv *.src.tar.gz ../..
          cd ../..
          echo "::endgroup::"
          CHROMIUM_VERSION="$(compgen -G "*.src.tar.gz" | grep -Po '([\d\.]+-\d*)')"
          REGISTRY="ghcr.io/${{ github.repository_owner }}"
          NAME="packages"
          ID="$(echo $REGISTRY/$NAME | tr '[A-Z]' '[a-z]')"
          REF="$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')"
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && REF=$(echo $REF | sed -e 's/^v//')
          [ "$REF" == "master" ] && REF=latest
          VERSION_TAG="$ID:ungoogled-chromium-$CHROMIUM_VERSION"
          LATEST_TAG="$ID:latest"
          echo "CHROMIUM_VERSION=$CHROMIUM_VERSION"
          echo "REGISTRY=$REGISTRY"
          echo "NAME=$NAME"
          echo "ID=$ID"
          echo "REF=$REF"
          echo "VERSION_TAG=$REF_TAG"
          echo "LATEST_TAG=$LATEST_TAG"
          echo "::group::Building container image..."
          # Build container from source files
          docker build . \
            --file .github/scripts/build/long/Dockerfile \
            --build-arg PACKAGE=ungoogled-chromium \
            --tag "$VERSION_TAG" \
          # Reduce worker space used
          rm -rf *
          echo "::endgroup::"
          echo "::set-output name=chromium-version::$CHROMIUM_VERSION"
          echo "::set-output name=version-tag::$VERSION_TAG"

      - name: Push image
        run: |
          docker push "${{ steps.build.outputs.version-tag }}"

    outputs:
      chromium-version: "${{ steps.build.outputs.chromium-version }}"
      image-tag: "${{ steps.build.outputs.version-tag }}"
